- name: Apply Security Group Role
  hosts: localhost
  gather_facts: false
  # Create 2 security groups for HTTP Load Balancer access
  tasks: 
    - name: Set AWS default varaibles
      set_fact:
        aws_region: ap-southeast-2
    - name: Create EC2 Security Group "pik-ec2-sg"
      ansible.builtin.include_role:
        name: create_security_group
      vars:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_group_name: "pik-ec2-sg"
        security_group_description: "Security group for EC2 servers"
        security_group_rules:
          # Allow global SSH
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
            group_desc: Allow global SSH access        
        security_group_egress_rules:
          - proto: all
            cidr_ip: 0.0.0.0/0
            group_desc: Allow all traffic outbound
      register: 
        ec2_sg_result
    - name: Display security group details
      debug:
        msg: "Security Group ID: {{ ec2_sg_result.group_id }}"
    - name: Create ELB Security Group "pik-elb-sg"
      ansible.builtin.include_role:
        name: create_security_group
      vars:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        aws_region: "ap-southeast-2"
        security_group_name: "pik-elb-sg"
        security_group_description: "Security group for ELB"
        security_group_rules:
          # Global HTTP ingress 
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
            group_desc: Global HTTP traffic inbound
          # Global HTTP ingress
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
            group_desc: Global HTTPS traffic inbound
        security_group_egress_rules:
          # ELB access EC2 on port 3000
          - proto: tcp
            from_port: 3000
            to_port: 3000
            group_id: "{{ ec2_sg_result.group_id }}"
            group_desc: ELB access EC2 API egress
      register: 
        elb_sg_result
  