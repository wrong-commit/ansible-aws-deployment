# This is a basic workflow to build a new EC2 AMI for a given branch
name: CI_Build_EC2_AMI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master", "dev" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Test running Ansible playbooks 
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Install latest version of Ansible
      - name: Install Ansible
        shell: bash
        run: |
          sudo apt update
          sudo apt install -y ansible
      # Install boto3 and botocore dependencies when using the local act workflow runner
      - name: ACT - Install boto dependencies 
        # Only run when act is running the build
        if: ${{ github.event.act }}
        run: |
          sudo apt install -y python3-boto3 python3-botocore
      # Install Ansible AWS Module Depdencies
      - name: GH - Install dependencies for Ansible which runs in venv
        # Only run if CI_ACT is not set or is false
        if: ${{ !github.event.act }}
        run: |
          # Only run of venv exists 
          if [[ -f "/opt/pipx/venvs/ansible-core/bin/activate" ]]; then  
            # Enter venv
            source /opt/pipx/venvs/ansible-core/bin/activate
            # Install python modules in Ansible venv
            python -m pip install boto3 botocore
          fi
      # Install Ansible AWS Collection
      - name: Install Ansible Modules
        run: ansible-galaxy collection install amazon.aws
      # Syntax check Ansible playbook
      - name: Syntax Check Ansible 
        working-directory: ./playbooks
        run: |
          ansible-playbook --syntax-check main_build_latest_ami.yml 
      # Run Ansible playbook to build Security Group
      - name: Run Ansible Playbook 
        # Run Ansible from playbooks directory to assist with routing
        working-directory: ./playbooks        
        # Run main_create_security_group playbook with secrets 
        # AWS_ACCESS_KEY, AWS_SECRET_KEY
        # DEBUG: act cannot properly handle the ${{ github.* }} variables
        #        The playbook will handle this manually
        run: |
          ansible-playbook main_build_latest_ami.yml --extra-vars "aws_access_key=${{ secrets.AWS_ACCESS_KEY }} aws_secret_key=${{ secrets.AWS_SECRET_KEY }} app_git_repo=${{ env.APP_GIT_REPO }} app_git_branch=${{ env.APP_GIT_BRANCH }}"
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
